@*
    // Rong Zhou
*@
@using RulesEngine.Models
@inject RulesEngineEditor.Services.WorkflowService WorkflowService

<sp_grid_actioninfo>
    <div>@Name</div>
    <div>
        <button class="reeditor_button" title="New Context" @onclick="NewContext">Add Context</button>
    </div>
</sp_grid_actioninfo>
<EditForm EditContext="@EditContext">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <div>
        <InputText class="form-control" @bind-Value="@actionInfo.Name" autocomplete="off"
            autocorrect="off" autocapitalize="off" spellcheck="false" />
    </div>
    <div>
        @if (errAddContextString != null) {
            <blockquote class="reeditor_blockquote redditor_rules_error">@errAddContextString</blockquote>
        }
        <ActionInfoContextEditor context="@actionInfo.Context" ContextChanged="WorkflowService.WorkflowUpdate" />
    </div>
</EditForm>
@code {
    private ActionInfo _actionInfo;
    [Parameter]
    public ActionInfo actionInfo
    {
        get
        {
            return _actionInfo;
        }
        set
        {
            _actionInfo = value;
        }
    }

    [Parameter]
    public string Name { get; set; }

    private string errAddContextString = null;

    private EditContext EditContext;

    protected override void OnInitialized()
    {
        EditContext = new EditContext(actionInfo);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        WorkflowService.WorkflowUpdate();
    }

    private void NewContext() {
        if (actionInfo.Context.ContainsKey("")) {
            errAddContextString = "There is an entry with no name, please use it.";
        } else {
            errAddContextString = null;
            actionInfo.Context.Add("", "");
        }
    }
}
