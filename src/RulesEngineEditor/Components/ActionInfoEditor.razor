@*
    // Rong Zhou
*@
@using RulesEngine.Models
@inject RulesEngineEditor.Services.WorkflowService WorkflowService

<EditForm EditContext="@EditContext">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <sp_grid_actioninfo>
        <div>
            <InputText rows="1" class="form-control" @bind-Value="@actionInfo.Name" autocomplete="off"
                autocorrect="off" autocapitalize="off" spellcheck="false" />
        </div>
        <div>
            <button class="reeditor_button" title="New Context" @onclick="NewContext">Add</button>
            <ActionInfoContextEditor context="@actionInfo.Context" ContextChanged="WorkflowService.WorkflowUpdate" />
        </div>
    </sp_grid_actioninfo>
</EditForm>
@code {
    private ActionInfo _actionInfo;
    [Parameter]
    public ActionInfo actionInfo
    {
        get
        {
            return _actionInfo;
        }
        set
        {
            _actionInfo = value;
        }
    }

    private EditContext EditContext;

    protected override void OnInitialized()
    {
        if (actionInfo == null)
            actionInfo = new ActionInfo();

        EditContext = new EditContext(actionInfo);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
        WorkflowService.WorkflowUpdate();
    }

    private void NewContext() {
        actionInfo.Context.Add("", "");
    }
}
