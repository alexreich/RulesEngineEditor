@*
    // Rong Zhou
*@
@using RulesEngineEditor.Models
@*@inject RulesEngineEditor.Services.WorkflowService WorkflowService*@

<EditForm EditContext="@EditContext">
    <DataAnnotationsValidator />
    <ValidationSummary />
    <sp_grid_scopedparam>
        <div>
            <InputText title="Context Name" class="form-control" @bind="@item.Key" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" />
        </div>
        <div>
            <InputTextArea title="Value" class="form-control" Value="@item.Value.ToString()" @onchange="ValueChanged" autocomplete="off" autocorrect="off" autocapitalize="off" spellcheck="false" />
        </div>
    </sp_grid_scopedparam>
</EditForm>
@code {
    [Parameter]
    public DictItem item { get; set; }

    private EditContext EditContext;

    protected override void OnInitialized()
    {
        EditContext = new EditContext(item);
        EditContext.OnFieldChanged += EditContext_OnFieldChanged;

        base.OnInitialized();
    }

    private void EditContext_OnFieldChanged(object sender, FieldChangedEventArgs e)
    {
    }

    private void ValueChanged(ChangeEventArgs v)
    {
        item.Value = v?.Value;
    }
}
